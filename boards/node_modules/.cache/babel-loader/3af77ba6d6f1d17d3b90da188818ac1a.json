{"ast":null,"code":"var _jsxFileName = \"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/column/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = props => {\n  _s();\n\n  const [title, setTask] = useState(\"\");\n\n  const handleChange = e => {\n    setTask(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let data = {\n      id: Math.random() * 1000,\n      title: title\n    };\n    props.handleTaskSubmit(props.column, data);\n    setTask(\"\");\n    axios.post('http://127.0.0.1:8000/task-create/', {\n      \"id\": Math.random() * 1000,\n      \"title\": title,\n      \"status\": props.column,\n      \"date\": \"2021-12-22\"\n    }).then(props.updateData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: props.refd,\n    className: props.isDraggingOver ? \"bg-info mt-3 px-3\" : \"mt-3 px-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleChange,\n          value: title,\n          className: \"form-control bg-light border-primary\",\n          placeholder: \"Add a new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"OhF0iUkmjomqRwlvBE503uysAzM=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/column/TaskList.js"],"names":["React","useState","axios","Index","props","title","setTask","handleChange","e","target","value","handleSubmit","preventDefault","data","id","Math","random","handleTaskSubmit","column","post","then","updateData","refd","isDraggingOver","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIC,IAAI,GAAG;AAACC,MAAAA,EAAE,EAAGC,IAAI,CAACC,MAAL,KAAgB,IAAtB;AAA6BX,MAAAA,KAAK,EAAEA;AAApC,KAAX;AACAD,IAAAA,KAAK,CAACa,gBAAN,CAAuBb,KAAK,CAACc,MAA7B,EAAqCL,IAArC;AACAP,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAJ,IAAAA,KAAK,CAACiB,IAAN,CAAW,oCAAX,EAAiD;AAAC,YAAOJ,IAAI,CAACC,MAAL,KAAgB,IAAxB;AAA+B,eAASX,KAAxC;AAA+C,gBAAUD,KAAK,CAACc,MAA/D;AAAuE,cAAQ;AAA/E,KAAjD,EACCE,IADD,CACMhB,KAAK,CAACiB,UADZ;AAED,GAPD;;AAQA,sBACE;AAAK,IAAA,GAAG,EAAEjB,KAAK,CAACkB,IAAhB;AAAsB,IAAA,SAAS,EAAElB,KAAK,CAACmB,cAAN,GAAuB,mBAAvB,GAA6C,WAA9E;AAAA,4BAEE;AAAM,MAAA,QAAQ,EAAEZ,YAAhB;AAA8B,MAAA,SAAS,EAAC,MAAxC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEJ,YAA7B;AAA2C,UAAA,KAAK,EAAEF,KAAlD;AAAyD,UAAA,SAAS,EAAC,sCAAnE;AAA0G,UAAA,WAAW,EAAC;AAAtH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAOGD,KAAK,CAACoB,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA1BD;;GAAMrB,K;;KAAAA,K;AA4BN,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios';\n\nconst Index = (props) => {\n  const [title, setTask] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTask(e.target.value);\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let data = {id: (Math.random() * 1000), title: title}\n    props.handleTaskSubmit(props.column, data);\n    setTask(\"\");\n    axios.post('http://127.0.0.1:8000/task-create/', {\"id\": (Math.random() * 1000), \"title\": title, \"status\": props.column, \"date\": \"2021-12-22\"})\n    .then(props.updateData)\n  }\n  return (\n    <div ref={props.refd} className={props.isDraggingOver ? \"bg-info mt-3 px-3\" : \"mt-3 px-3\"}>\n\n      <form onSubmit={handleSubmit} className=\"mb-3\">\n        <div className=\"form-group\">\n          <input type=\"text\" onChange={handleChange} value={title} className=\"form-control bg-light border-primary\" placeholder=\"Add a new task\"/>\n        </div>\n      </form>\n      {props.children}\n    </div>\n   );\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}