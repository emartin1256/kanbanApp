{"ast":null,"code":"var _jsxFileName = \"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport database from './data';\nimport Column from './column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [data, setData] = useState({});\n  const [newColumn, setNewColumn] = useState('');\n  const [taskColumn, setTaskColumn] = useState(['four']);\n\n  const getData = async () => {\n    let response = await axios.get('http://127.0.0.1:8000/task-list/'); // console.log(response.data)\n\n    return response.data;\n  };\n\n  let transformData = data => {\n    let transformedData = {}; // get the status from the task\n    // creates an array of status\n\n    let status = data.map(task => {\n      return task.status;\n    }); // map through the status\n    // create an object with key corresponding to the status and set it to an empty array\n    // filter the data and group task based on the status\n    //    if the data's status is exactly equal to the map status\n\n    status.map(stats => {\n      transformedData[stats] = [];\n      let filteredData = data.filter(d => {\n        if (d.status === stats) {\n          transformedData[stats].push(d);\n        }\n      });\n      return filteredData;\n    });\n    return transformedData;\n  };\n\n  useEffect(async () => {\n    let data = await getData(); // console.log(data)\n\n    let transformedData = transformData(data);\n    setData(transformedData);\n  }, []);\n\n  const onDragEnd = async result => {\n    const {\n      destination,\n      source\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    const id = result.draggableId;\n    let cards = await getData();\n    let card = cards.filter(obj => {\n      return obj.id == id;\n    });\n    console.log(card[0].title);\n    const status = destination.droppableId;\n    const url = `http://127.0.0.1:8000/task-update/${id}/`;\n    const d = JSON.stringify({\n      id: id,\n      title: card[0].title,\n      status: status,\n      date: '2021-12-22'\n    });\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId) {\n      const newData = Array.from(data[source.droppableId]);\n      const task = newData[source.index];\n      newData.splice(source.index, 1);\n      newData.splice(destination.index, 0, task);\n      setData({ ...data,\n        [source.droppableId]: newData\n      });\n      return;\n    }\n\n    const column = Array.from(data[source.droppableId]);\n    const remTask = column[source.index];\n    column.splice(source.index, 1);\n    const destinationData = Array.from(data[destination.droppableId]);\n    destinationData.splice(destination.index, 0, remTask);\n    axios({\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: d,\n      url: url\n    }).catch(error => {\n      console.log(error);\n    }); // .then(updateData())\n    // await axios.post(url, d)\n    // axios.post('http://127.0.0.1:8000/task-create/', {\"id\": (Math.random() * 1000), \"title\": title, \"status\": status, \"date\": \"2021-12-22\"})\n    // axios.delete(`http://127.0.0.1:8000/task-delete/${id}`)\n\n    setData({ ...data,\n      [source.droppableId]: column,\n      [destination.droppableId]: destinationData\n    });\n  };\n\n  const updateColumn = async e => {\n    const id = Number(e.draggableId);\n    const url = `http://127.0.0.1:8000/task-update/${id}/`;\n    const title = 'a';\n    const status = e.destination.droppableId;\n    const data = JSON.stringify({\n      id: id,\n      title: title,\n      status: status,\n      date: '2021-12-22'\n    });\n    await axios.put(url, data);\n    axios({\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: data,\n      url: url\n    }).catch(error => {\n      console.log(error);\n    }).then(updateData());\n  };\n\n  const handleChange = e => {\n    setNewColumn(e.target.value);\n  };\n\n  const handleTaskSubmit = (columnId, task) => {\n    let copyData = data[columnId];\n    let newData = [...copyData, task];\n    setData({ ...data,\n      [columnId]: newData\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (newColumn.length > 0) {\n      setData({ ...data,\n        [newColumn]: []\n      });\n      setNewColumn('');\n    }\n  };\n\n  const updateData = async () => {\n    let data = await getData();\n    console.log(data);\n    let transformedData = transformData(data);\n    setData(transformedData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex overflow-auto px-5 mt-5 mb-5 pb-5\",\n      children: [Object.keys(data).map((column, index) => {\n        return /*#__PURE__*/_jsxDEV(Column, {\n          column: column,\n          tasks: data[column],\n          handleTaskSubmit: handleTaskSubmit,\n          handleSubmit: handleSubmit,\n          updateData: updateData\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-2\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newColumn,\n              onChange: handleChange,\n              className: \"form-control bg-light border-primary\",\n              placeholder: \"Add a new column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"BysMigjrj3LRsh9/D545xo5wMsg=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/index.js"],"names":["React","useState","useEffect","DragDropContext","axios","database","Column","Index","data","setData","newColumn","setNewColumn","taskColumn","setTaskColumn","getData","response","get","transformData","transformedData","status","map","task","stats","filteredData","filter","d","push","onDragEnd","result","destination","source","id","draggableId","cards","card","obj","console","log","title","droppableId","url","JSON","stringify","date","index","newData","Array","from","splice","column","remTask","destinationData","method","headers","catch","error","updateColumn","e","Number","put","then","updateData","handleChange","target","value","handleTaskSubmit","columnId","copyData","handleSubmit","preventDefault","length","Object","keys"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport database from './data';\nimport Column from './column';\n\nconst Index = () => {\n  const [data, setData] = useState({});\n  const [newColumn, setNewColumn] = useState('');\n  const [taskColumn, setTaskColumn] = useState(['four']);\n  const getData = async () => {\n    let response = await axios.get('http://127.0.0.1:8000/task-list/');\n    // console.log(response.data)\n    return response.data;\n  };\n  let transformData = data => {\n    let transformedData = {};\n\n    // get the status from the task\n    // creates an array of status\n    let status = data.map(task => {\n      return task.status;\n    });\n\n    // map through the status\n    // create an object with key corresponding to the status and set it to an empty array\n    // filter the data and group task based on the status\n    //    if the data's status is exactly equal to the map status\n\n    status.map(stats => {\n      transformedData[stats] = [];\n      let filteredData = data.filter(d => {\n        if (d.status === stats) {\n          transformedData[stats].push(d);\n        }\n      });\n      return filteredData;\n    });\n\n    return transformedData;\n  };\n\n  useEffect(async () => {\n    let data = await getData();\n    // console.log(data)\n    let transformedData = transformData(data);\n    setData(transformedData);\n  }, []);\n\n  const onDragEnd = async result => {\n    const { destination, source } = result;\n    if (!destination) {\n      return;\n    }\n    const id = result.draggableId;\n    let cards = await getData();\n    let card = cards.filter(obj => {\n      return obj.id == id;\n    });\n    console.log(card[0].title);\n    const status = destination.droppableId;\n    const url = `http://127.0.0.1:8000/task-update/${id}/`;\n    const d = JSON.stringify({\n      id: id,\n      title: card[0].title,\n      status: status,\n      date: '2021-12-22',\n    });\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId) {\n      const newData = Array.from(data[source.droppableId]);\n      const task = newData[source.index];\n      newData.splice(source.index, 1);\n      newData.splice(destination.index, 0, task);\n      setData({\n        ...data,\n        [source.droppableId]: newData,\n      });\n      return;\n    }\n\n    const column = Array.from(data[source.droppableId]);\n    const remTask = column[source.index];\n    column.splice(source.index, 1);\n\n    const destinationData = Array.from(data[destination.droppableId]);\n    destinationData.splice(destination.index, 0, remTask);\n    axios({\n      method: 'PUT',\n      headers: { 'content-type': 'application/json' },\n      data: d,\n      url: url,\n    }).catch(error => {\n      console.log(error);\n    });\n    // .then(updateData())\n    // await axios.post(url, d)\n    // axios.post('http://127.0.0.1:8000/task-create/', {\"id\": (Math.random() * 1000), \"title\": title, \"status\": status, \"date\": \"2021-12-22\"})\n    // axios.delete(`http://127.0.0.1:8000/task-delete/${id}`)\n    setData({\n      ...data,\n      [source.droppableId]: column,\n      [destination.droppableId]: destinationData,\n    });\n  };\n\n  const updateColumn = async e => {\n    const id = Number(e.draggableId);\n    const url = `http://127.0.0.1:8000/task-update/${id}/`;\n\n    const title = 'a';\n    const status = e.destination.droppableId;\n    const data = JSON.stringify({\n      id: id,\n      title: title,\n      status: status,\n      date: '2021-12-22',\n    });\n    await axios.put(url, data);\n    axios({\n      method: 'PUT',\n      headers: { 'content-type': 'application/json' },\n      data: data,\n      url: url,\n    })\n      .catch(error => {\n        console.log(error);\n      })\n      .then(updateData());\n  };\n\n  const handleChange = e => {\n    setNewColumn(e.target.value);\n  };\n\n  const handleTaskSubmit = (columnId, task) => {\n    let copyData = data[columnId];\n    let newData = [...copyData, task];\n\n    setData({ ...data, [columnId]: newData });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (newColumn.length > 0) {\n      setData({ ...data, [newColumn]: [] });\n      setNewColumn('');\n    }\n  };\n  const updateData = async () => {\n    let data = await getData();\n    console.log(data);\n    let transformedData = transformData(data);\n    setData(transformedData);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"d-flex overflow-auto px-5 mt-5 mb-5 pb-5\">\n        {Object.keys(data).map((column, index) => {\n          return (\n            <Column\n              key={index}\n              column={column}\n              tasks={data[column]}\n              handleTaskSubmit={handleTaskSubmit}\n              handleSubmit={handleSubmit}\n              updateData={updateData}\n            />\n          );\n        })}\n        <div className=\"col-lg-2\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                value={newColumn}\n                onChange={handleChange}\n                className=\"form-control bg-light border-primary\"\n                placeholder=\"Add a new column\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}