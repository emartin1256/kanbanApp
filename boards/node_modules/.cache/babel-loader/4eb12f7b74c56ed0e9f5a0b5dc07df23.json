{"ast":null,"code":"var _jsxFileName = \"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/column/index.js\";\nimport React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport TaskList from './TaskList';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-2 mx-3 border-primary\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header bg-primary text-white\",\n        children: props.column.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: props.column,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(TaskList, {\n          refd: provided.innerRef,\n          isDraggingOver: snapshot.isDraggingOver,\n          ...provided.droppableProps,\n          column: props.column,\n          handleTaskSubmit: props.handleTaskSubmit,\n          updateData: props.updateData,\n          children: [props.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n            index: index,\n            task: task,\n            updateData: props.updateData\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/column/index.js"],"names":["React","Droppable","TaskList","Task","Index","props","column","toUpperCase","provided","snapshot","innerRef","isDraggingOver","droppableProps","handleTaskSubmit","updateData","tasks","map","task","index","id","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,kBAAoDA,KAAK,CAACC,MAAN,CAAaC,WAAb;AAApD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,SAAD;AAAW,QAAA,WAAW,EAAEF,KAAK,CAACC,MAA9B;AAAA,kBACG,CAACE,QAAD,EAAWC,QAAX,kBACC,QAAC,QAAD;AACE,UAAA,IAAI,EAAED,QAAQ,CAACE,QADjB;AAEE,UAAA,cAAc,EAAED,QAAQ,CAACE,cAF3B;AAAA,aAGMH,QAAQ,CAACI,cAHf;AAIE,UAAA,MAAM,EAAEP,KAAK,CAACC,MAJhB;AAKE,UAAA,gBAAgB,EAAED,KAAK,CAACQ,gBAL1B;AAME,UAAA,UAAU,EAAER,KAAK,CAACS,UANpB;AAAA,qBAQGT,KAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACf,QAAC,IAAD;AAAoB,YAAA,KAAK,EAAEA,KAA3B;AAAkC,YAAA,IAAI,EAAED,IAAxC;AAA8C,YAAA,UAAU,EAAEZ,KAAK,CAACS;AAAhE,aAAWG,IAAI,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,kBADD,CARH,EAWGX,QAAQ,CAACY,WAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA1BD;;KAAMhB,K;AA4BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nimport TaskList from './TaskList';\nimport Task from './Task';\n\nconst Index = props => {\n  return (\n    <div className=\"col-lg-2 mx-3 border-primary\">\n      <div className=\"card bg-light\">\n        <div className=\"card-header bg-primary text-white\">{props.column.toUpperCase()}</div>\n\n        <Droppable droppableId={props.column}>\n          {(provided, snapshot) => (\n            <TaskList\n              refd={provided.innerRef}\n              isDraggingOver={snapshot.isDraggingOver}\n              {...provided.droppableProps}\n              column={props.column}\n              handleTaskSubmit={props.handleTaskSubmit}\n              updateData={props.updateData}\n            >\n              {props.tasks.map((task, index) => (\n                <Task key={task.id} index={index} task={task} updateData={props.updateData} />\n              ))}\n              {provided.placeholder}\n            </TaskList>\n          )}\n        </Droppable>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}