[{"/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/index.js":"1","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/reportWebVitals.js":"2","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/App.js":"3","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Navbar/index.js":"4","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/AppRouter.js":"5","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/index.js":"6","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/home/index.js":"7","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/data.js":"8","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/column/index.js":"9","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/column/Task.js":"10","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/column/TaskList.js":"11","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/index.js":"12","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/App.js":"13","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/reportWebVitals.js":"14","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/AppRouter.js":"15","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Navbar/index.js":"16","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/home/index.js":"17","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/index.js":"18","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/data.js":"19","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/column/index.js":"20","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/column/Task.js":"21","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/column/TaskList.js":"22"},{"size":500,"mtime":1630486680224,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1630485914686,"results":"25","hashOfConfig":"24"},{"size":1021,"mtime":1630486537982,"results":"26","hashOfConfig":"24"},{"size":1108,"mtime":1630486512585,"results":"27","hashOfConfig":"24"},{"size":358,"mtime":1630486660231,"results":"28","hashOfConfig":"24"},{"size":5384,"mtime":1630492369661,"results":"29","hashOfConfig":"24"},{"size":667,"mtime":1630486512583,"results":"30","hashOfConfig":"24"},{"size":866,"mtime":1630486512581,"results":"31","hashOfConfig":"24"},{"size":1219,"mtime":1630486512580,"results":"32","hashOfConfig":"24"},{"size":885,"mtime":1630486512574,"results":"33","hashOfConfig":"24"},{"size":1000,"mtime":1630486512579,"results":"34","hashOfConfig":"24"},{"size":500,"mtime":1630486680224,"results":"35","hashOfConfig":"36"},{"size":1021,"mtime":1630486537982,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1630485914686,"results":"38","hashOfConfig":"36"},{"size":358,"mtime":1630486660231,"results":"39","hashOfConfig":"36"},{"size":1108,"mtime":1630486512585,"results":"40","hashOfConfig":"36"},{"size":667,"mtime":1630486512583,"results":"41","hashOfConfig":"36"},{"size":5385,"mtime":1630498125510,"results":"42","hashOfConfig":"36"},{"size":866,"mtime":1630486512581,"results":"43","hashOfConfig":"36"},{"size":1219,"mtime":1630486512580,"results":"44","hashOfConfig":"36"},{"size":885,"mtime":1630486512574,"results":"45","hashOfConfig":"36"},{"size":1000,"mtime":1630486512579,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"z3ezla",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"55ueky",{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/index.js",[],["97","98"],"/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/reportWebVitals.js",[],"/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/App.js",["99"],"import { BrowserRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Routes from \"./AppRouter\";\n\n// function App() {\n  class App extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        taskList:[],\n        activeItem:{\n          id:null,\n          title:'',\n          completed:false,\n        },\n        editing:false,\n      }\n      this.fetchTasks = this.fetchTasks.bind(this)\n    };\n    componentDidMount(){\n      this.fetchTasks()\n    }\n    fetchTasks(){\n      console.log('Fetching...')\n      fetch('http://127.0.0.1:8000/task-list/')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          taskList:data\n        })\n      )\n    }\n\n    render(){\n    var tasks = this.state.taskList\n    // console.log(tasks)\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar />\n        {/* <Board /> */}\n        <Routes />\n      </div>\n    </BrowserRouter>\n  );\n}\n}\n\nexport default App;\n","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Navbar/index.js",[],"/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/AppRouter.js",[],"/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/index.js",["100","101","102","103","104","105","106"],"/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/home/index.js",[],"/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/data.js",["107"],"import taskList from \"./../../../src/App\"\n// console.log(taskList)\nconst data = {\n  backlog: [\n    {\n      id: 114,\n      title: \"Developer hackathon\",\n    },\n    {\n      id: 121,\n      title: \"Netlify / heroku \",\n    },\n  ],\n  // tasks: [\n  //   tasks,\n  // ],\n  waiting: [\n    {\n      id: 11562,\n      title: \"splendid standalone vibes\",\n    },\n    {\n      id: 64,\n      title: \"realtime chat application for users\",\n    },\n    {\n      id: 634,\n      title: \"Fullstack twitter app\",\n    },\n  ],\n  progress: [\n    {\n      id: 1142,\n      title: \"meeting with the folks\",\n    },\n    {\n      id: 1134,\n      title: \"watch some Netflix: The Mandalorian\",\n    },\n  ],\n  done: [\n    {\n      id: 1212,\n      title: \"Money Heist\",\n    },\n    {\n      id: 1344,\n      title: \"Reprogram the administrator for world domination: (hahaha)\",\n    },\n  ],\n};\n\nexport default data;\n","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/column/index.js",["108"],"import React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nimport TaskList from \"./TaskList\";\nimport Task from \"./Task\";\n\nconst Index = (props) => {\n  const columns = [\n    \"backlog\",\n    \"waiting\",\n    \"ongoing\",\n    \"done\"\n  ]\n    return (\n      <div className=\"col-lg-2 mx-3 border-primary\">\n        <div className=\"card bg-light\">\n          <div className=\"card-header bg-primary text-white\">\n          {props.column.toUpperCase()}\n          </div>\n\n          <Droppable droppableId={props.column}>\n            {(provided, snapshot) => (\n              <TaskList\n                refd={provided.innerRef}\n                isDraggingOver={snapshot.isDraggingOver}\n                {...provided.droppableProps}\n                column={props.column}\n                handleTaskSubmit={props.handleTaskSubmit}\n                updateData={props.updateData}\n              >\n                {props.tasks.map((task, index) => (\n                  <Task key={task.id} index={index} task={task} updateData={props.updateData} />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n        </div>\n      </div>\n    );\n\n};\n\nexport default Index;\n","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/column/Task.js",["109"],"import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport tasks from \"../../../App\"\nimport axios from 'axios';\nimport { AiOutlineCloseCircle } from 'react-icons/all';\nconst Index = (props) => {\n  const Delete = () => {\n    console.log(props.task.id)\n    axios.delete(`http://127.0.0.1:8000/task-delete/${props.task.id}`)\n    .then(props.updateData)\n  }\n  \n  return (\n    <Draggable draggableId={props.task.id.toString()} index={props.index} >\n      {(provided) => (\n        <div\n          className=\"card shadow-sm mb-3 p-2\"\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          {props.task.title}\n          <button onClick={Delete}>\n            <AiOutlineCloseCircle className=\"close\" />\n          </button>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Index;\n","/Users/elliotmartin/Downloads/WayMaker/Hackathon/kanbanApp/boards/src/components/Board/column/TaskList.js",[],"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/index.js",[],"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/App.js",["110"],"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/reportWebVitals.js",[],"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/AppRouter.js",[],"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Navbar/index.js",[],"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/home/index.js",[],"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/index.js",["111","112","113","114","115","116","117"],"import React, { useState, useEffect } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport axios from 'axios';\nimport database from \"./data\";\nimport Column from \"./column\";\n\nconst Index = () => {\n  const [data, setData] = useState({});\n  const [newColumn, setNewColumn] = useState(\"\");\n  const [taskColumn, setTaskColumn] = useState([\"four\"]);\n  const getData = async() => {\n    let response = await axios.get('http://127.0.0.1:8000/task-list/')\n    // console.log(response.data)\n    return response.data;\n  }\n  let transformData = (data) => {\n  let transformedData = {};\n\n  // get the status from the task\n  // creates an array of status\n  let status = data.map(task => {\n    return task.status\n  });\n\n  // map through the status\n  // create an object with key corresponding to the status and set it to an empty array\n  // filter the data and group task based on the status\n  //    if the data's status is exactly equal to the map status\n\n  status.map(stats => {\n    transformedData[stats] = [];\n    let filteredData = data.filter(d => {\n      if (d.status === stats) {\n        transformedData[stats].push(d);\n      }\n    }) ;\n    return filteredData\n  });\n\n  return transformedData;\n\n}\n\n  useEffect(async () => {\n    let data = await getData()\n    // console.log(data)\n    let transformedData = transformData(data)\n    setData(transformedData);\n  }, []);\n\n  const onDragEnd = async(result) => {\n    const { destination, source } = result;\n    if (!destination) {\n      return;\n    }\n    const id = result.draggableId\n    let cards =  await getData()\n    let card = cards.filter(obj => {return obj.id == id})\n    console.log(card[0].title)\n    const status = destination.droppableId\n    const url = `http://127.0.0.1:8000/task-update/${id}/`\n    const d = JSON.stringify({\n      id: id,\n      title: card[0].title,\n      status: status,\n      date: \"2021-12-22\"\n    })\n    \n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId) {\n      const newData = Array.from(data[source.droppableId]);\n      const task = newData[source.index];\n      newData.splice(source.index, 1);\n      newData.splice(destination.index, 0, task);\n      setData({\n        ...data,\n        [source.droppableId]: newData,\n      });\n      return;\n    }\n\n    const column = Array.from(data[source.droppableId]);\n    const remTask = column[source.index];\n    column.splice(source.index, 1);\n\n    const destinationData = Array.from(data[destination.droppableId]);\n    destinationData.splice(destination.index, 0, remTask);\n    axios({\n      method: 'PUT',\n      headers: { 'content-type': 'application/json' },\n      data: d,\n      url: url\n      })\n    .catch(error => {\n      console.log(error)\n    })\n    // .then(updateData())\n    // await axios.post(url, d)\n    // axios.post('http://127.0.0.1:8000/task-create/', {\"id\": (Math.random() * 1000), \"title\": title, \"status\": status, \"date\": \"2021-12-22\"})\n    // axios.delete(`http://127.0.0.1:8000/task-delete/${id}`)\n    setData({\n      ...data,\n      [source.droppableId]: column,\n      [destination.droppableId]: destinationData,\n    });\n  };\n\n  const updateColumn = async(e) => {\n    const id = Number(e.draggableId);\n    const url = `http://127.0.0.1:8000/task-update/${id}/`\n    \n\n    const title = \"a\"\n    const status = e.destination.droppableId\n    const data = JSON.stringify({\n      id: id,\n      title: title,\n      status: status,\n      date: \"2021-12-22\"\n    })\n    await axios.put(url, data)\n    axios({\n      method: 'PUT',\n      headers: { 'content-type': 'application/json' },\n      data: data,\n      url: url\n      })\n    .catch(error => {\n      console.log(error)\n    })\n    .then(updateData())\n  }\n\n  const handleChange = (e) => {\n    setNewColumn(e.target.value);\n  };\n\n  const handleTaskSubmit = (columnId, task) => {\n\n    let copyData = data[columnId];\n    let newData = [...copyData, task];\n\n    setData({...data, [columnId]: newData});\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (newColumn.length > 0) {\n      setData({ ...data, [newColumn]: [] });\n      setNewColumn(\"\");\n    }\n  };\n   const updateData = async() => {\n    let data =  await getData()\n    console.log(data)\n    let transformedData = transformData(data)\n    setData(transformedData);\n  }\n  \n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"d-flex overflow-auto px-5 mt-5 mb-5 pb-5\">\n        {/* <div className=\"\"> */}\n        {Object.keys(data).map((column, index) => {\n          return (\n            <Column\n              key={index}\n              column={column}\n              tasks={data[column]}\n              handleTaskSubmit={handleTaskSubmit}\n              handleSubmit={handleSubmit}\n              updateData={updateData}\n            />\n          );\n        })}\n        <div className=\"col-lg-2\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                value={newColumn}\n                onChange={handleChange}\n                className=\"form-control bg-light border-primary\"\n                placeholder=\"Add a new column\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Index;\n","/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/data.js",["118"],"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/column/index.js",["119"],"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/column/Task.js",["120"],"/Users/elliotmartin/Downloads/WayMaker/kanbanApp/boards/src/components/Board/column/TaskList.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":36,"column":9,"nodeType":"127","messageId":"128","endLine":36,"endColumn":14},{"ruleId":"125","severity":1,"message":"129","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"130","line":10,"column":10,"nodeType":"127","messageId":"128","endLine":10,"endColumn":20},{"ruleId":"125","severity":1,"message":"131","line":10,"column":22,"nodeType":"127","messageId":"128","endLine":10,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":32,"column":38,"nodeType":"134","messageId":"135","endLine":32,"endColumn":40},{"ruleId":"136","severity":1,"message":"137","line":43,"column":13,"nodeType":"134","endLine":48,"endColumn":4},{"ruleId":"138","severity":1,"message":"139","line":57,"column":51,"nodeType":"140","messageId":"141","endLine":57,"endColumn":53},{"ruleId":"125","severity":1,"message":"142","line":113,"column":9,"nodeType":"127","messageId":"128","endLine":113,"endColumn":21},{"ruleId":"125","severity":1,"message":"143","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":16},{"ruleId":"125","severity":1,"message":"144","line":8,"column":9,"nodeType":"127","messageId":"128","endLine":8,"endColumn":16},{"ruleId":"125","severity":1,"message":"145","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":36,"column":9,"nodeType":"127","messageId":"128","endLine":36,"endColumn":14},{"ruleId":"125","severity":1,"message":"129","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"130","line":10,"column":10,"nodeType":"127","messageId":"128","endLine":10,"endColumn":20},{"ruleId":"125","severity":1,"message":"131","line":10,"column":22,"nodeType":"127","messageId":"128","endLine":10,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":32,"column":38,"nodeType":"134","messageId":"135","endLine":32,"endColumn":40},{"ruleId":"136","severity":1,"message":"137","line":44,"column":13,"nodeType":"134","endLine":49,"endColumn":4},{"ruleId":"138","severity":1,"message":"139","line":58,"column":51,"nodeType":"140","messageId":"141","endLine":58,"endColumn":53},{"ruleId":"125","severity":1,"message":"142","line":114,"column":9,"nodeType":"127","messageId":"128","endLine":114,"endColumn":21},{"ruleId":"125","severity":1,"message":"143","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":16},{"ruleId":"125","severity":1,"message":"144","line":8,"column":9,"nodeType":"127","messageId":"128","endLine":8,"endColumn":16},{"ruleId":"125","severity":1,"message":"145","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":13},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'tasks' is assigned a value but never used.","Identifier","unusedVar","'database' is defined but never used.","'taskColumn' is assigned a value but never used.","'setTaskColumn' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'updateColumn' is assigned a value but never used.","'taskList' is defined but never used.","'columns' is assigned a value but never used.","'tasks' is defined but never used.","no-global-assign","no-unsafe-negation"]