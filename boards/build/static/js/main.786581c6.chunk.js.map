{"version":3,"sources":["components/Navbar/index.js","components/Board/data.js","components/Board/column/TaskList.js","components/Board/column/Task.js","components/Board/column/index.js","components/Board/index.js","components/Board/home/index.js","AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["Index","class","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","data","backlog","title","waiting","progress","done","props","useState","setTask","ref","refd","className","isDraggingOver","onSubmit","e","preventDefault","Math","random","handleTaskSubmit","column","onChange","target","value","placeholder","children","draggableId","task","toString","index","provided","draggableProps","dragHandleProps","innerRef","toUpperCase","droppableId","snapshot","TaskList","droppableProps","tasks","map","Task","setData","newColumn","setNewColumn","useEffect","database","columnId","copyData","newData","onDragEnd","result","destination","source","Array","from","splice","remTask","destinationData","Object","keys","length","to","style","textDecoration","color","path","exact","component","Home","Board","App","Navbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAqCeA,EArCD,WACZ,OACE,qBAAKC,MAAM,8CAAX,SACE,sBAAKA,MAAM,kBAAX,UACE,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,gCAGA,wBACED,MAAM,iBACNE,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMP,MAAM,0BAEd,qBAAKA,MAAM,2BAA2BQ,GAAG,yBAAzC,SACE,qBAAIR,MAAM,kCAAV,UACE,oBAAIA,MAAM,WAAV,SACE,mBAAGA,MAAM,kBAAkBS,eAAa,OAAOR,KAAK,IAApD,qBAIF,oBAAID,MAAM,WAAV,SACE,mBAAGA,MAAM,WAAWC,KAAK,mBAAzB,+B,6CCqBCS,EA/CF,CACXC,QAAS,CACP,CACEH,GAAI,IACJI,MAAO,uBAET,CACEJ,GAAI,IACJI,MAAO,sBAGXC,QAAS,CACP,CACEL,GAAI,MACJI,MAAO,6BAET,CACEJ,GAAI,GACJI,MAAO,uCAET,CACEJ,GAAI,IACJI,MAAO,0BAGXE,SAAU,CACR,CACEN,GAAI,KACJI,MAAO,0BAET,CACEJ,GAAI,KACJI,MAAO,wCAGXG,KAAM,CACJ,CACEP,GAAI,KACJI,MAAO,eAET,CACEJ,GAAI,KACJI,MAAO,gECdEb,EA1BD,SAACiB,GAAW,IAAD,EACEC,mBAAS,IADX,mBAChBL,EADgB,KACTM,EADS,KAavB,OACE,sBAAKC,IAAKH,EAAMI,KAAMC,UAAWL,EAAMM,eAAiB,oBAAsB,YAA9E,UAEE,sBAAMC,SATW,SAACC,GACpBA,EAAEC,iBACF,IAAIf,EAAO,CAACF,GAAqB,IAAhBkB,KAAKC,SAAkBf,MAAOA,GAC/CI,EAAMY,iBAAiBZ,EAAMa,OAAQnB,GACrCQ,EAAQ,KAKwBG,UAAU,OAAxC,SACE,qBAAKA,UAAU,aAAf,SACE,uBAAOnB,KAAK,OAAO4B,SAfN,SAACN,GACpBN,EAAQM,EAAEO,OAAOC,QAcgCA,MAAOpB,EAAOS,UAAU,uCAAuCY,YAAY,uBAGzHjB,EAAMkB,aCHEnC,EAjBD,SAACiB,GACb,OACE,cAAC,IAAD,CAAWmB,YAAanB,EAAMoB,KAAK5B,GAAG6B,WAAYC,MAAOtB,EAAMsB,MAA/D,SACG,SAACC,GAAD,OACC,yDACElB,UAAU,2BACNkB,EAASC,gBACTD,EAASE,iBAHf,IAIEtB,IAAKoB,EAASG,SAJhB,SAMG1B,EAAMoB,KAAKxB,aCsBPb,EA7BD,SAACiB,GACb,OACE,qBAAKK,UAAU,+BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,oCAAf,SACCL,EAAMa,OAAOc,gBAGd,cAAC,IAAD,CAAWC,YAAa5B,EAAMa,OAA9B,SACG,SAACU,EAAUM,GAAX,OACC,eAACC,EAAD,yBACE1B,KAAMmB,EAASG,SACfpB,eAAgBuB,EAASvB,gBACrBiB,EAASQ,gBAHf,IAIElB,OAAQb,EAAMa,OACdD,iBAAkBZ,EAAMY,iBAL1B,UAOGZ,EAAMgC,MAAMC,KAAI,SAACb,EAAME,GAAP,OACf,cAACY,EAAD,CAAoBZ,MAAOA,EAAOF,KAAMA,GAA7BA,EAAK5B,OAEjB+B,EAASN,yBCmFTlC,EAvGD,WAAO,IAAD,EACMkB,mBAAS,IADf,mBACXP,EADW,KACLyC,EADK,OAEgBlC,mBAAS,IAFzB,mBAEXmC,EAFW,KAEAC,EAFA,KAIlBC,qBAAU,WACRH,EAAQI,KACP,IAEH,IA6CM3B,EAAmB,SAAC4B,EAAUpB,GAElC,IAAIqB,EAAW/C,EAAK8C,GAChBE,EAAO,sBAAOD,GAAP,CAAiBrB,IAE5Be,EAAQ,2BAAIzC,GAAL,kBAAY8C,EAAWE,MAYhC,OACE,cAAC,IAAD,CAAiBC,UA/DD,SAACC,GAAY,IAAD,EACpBC,EAAqCD,EAArCC,YAAaC,EAAwBF,EAAxBE,OAAwBF,EAAhBhB,YAE7B,GAAKiB,IAKHA,EAAYjB,cAAgBkB,EAAOlB,aACnCiB,EAAYvB,QAAUwB,EAAOxB,OAF/B,CAOA,GAAIuB,EAAYjB,cAAgBkB,EAAOlB,YAAa,CAClD,IAAMc,EAAUK,MAAMC,KAAKtD,EAAKoD,EAAOlB,cACjCR,EAAOsB,EAAQI,EAAOxB,OAO5B,OANAoB,EAAQO,OAAOH,EAAOxB,MAAO,GAC7BoB,EAAQO,OAAOJ,EAAYvB,MAAO,EAAGF,QACrCe,EAAQ,2BACHzC,GADE,kBAEJoD,EAAOlB,YAAcc,KAK1B,IAAM7B,EAASkC,MAAMC,KAAKtD,EAAKoD,EAAOlB,cAChCsB,EAAUrC,EAAOiC,EAAOxB,OAC9BT,EAAOoC,OAAOH,EAAOxB,MAAO,GAE5B,IAAM6B,EAAkBJ,MAAMC,KAAKtD,EAAKmD,EAAYjB,cACpDuB,EAAgBF,OAAOJ,EAAYvB,MAAO,EAAG4B,GAE7Cf,EAAQ,2BACHzC,GADE,uBAEJoD,EAAOlB,YAAcf,GAFjB,cAGJgC,EAAYjB,YAAcuB,GAHtB,OA8BP,SACE,sBAAK9C,UAAU,2CAAf,UAEG+C,OAAOC,KAAK3D,GAAMuC,KAAI,SAACpB,EAAQS,GAC9B,OACE,cAAC,EAAD,CAEET,OAAQA,EACRmB,MAAOtC,EAAKmB,GACZD,iBAAkBA,GAHbU,MAOX,qBAAKjB,UAAU,WAAf,SACE,sBAAME,SAxBO,SAACC,GACpBA,EAAEC,iBAEE2B,EAAUkB,OAAS,IACrBnB,EAAQ,2BAAKzC,GAAN,kBAAa0C,EAAY,MAChCC,EAAa,MAmBT,SACE,qBAAKhC,UAAU,aAAf,SACE,uBACEnB,KAAK,OACL8B,MAAOoB,EACPtB,SA1CO,SAACN,GACpB6B,EAAa7B,EAAEO,OAAOC,QA0CVX,UAAU,uCACVY,YAAY,iCCxEblC,EAxBD,WACZ,OACE,sBAAKsB,UAAU,iBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,mBAAGA,UAAU,YAAb,4BAGF,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,kBAAhB,yBACA,cAAC,IAAD,CACEkD,GAAG,mBACHC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,QAF1C,SAIE,qBAAKrD,UAAU,WAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,YAAf,qCCFCtB,EATD,WACZ,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4E,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOH,KAAK,aAAaC,OAAK,EAACC,UAAWE,QCOjCC,MAZf,WACE,OACE,cAAC,IAAD,UACE,gCACE,cAACC,EAAD,IAEA,cAAC,EAAD,UCCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.786581c6.chunk.js","sourcesContent":["const Index = () => {\n  return (\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"/\">\n          Project Management\n        </a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                Board\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/board/123456789\">\n                Main\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Index;\n","const data = {\n  backlog: [\n    {\n      id: 114,\n      title: \"Developer hackathon\",\n    },\n    {\n      id: 121,\n      title: \"Netlify / heroku \",\n    },\n  ],\n  waiting: [\n    {\n      id: 11562,\n      title: \"splendid standalone vibes\",\n    },\n    {\n      id: 64,\n      title: \"realtime chat application for users\",\n    },\n    {\n      id: 634,\n      title: \"Fullstack twitter app\",\n    },\n  ],\n  progress: [\n    {\n      id: 1142,\n      title: \"meeting with the folks\",\n    },\n    {\n      id: 1134,\n      title: \"watch some Netflix: The Mandalorian\",\n    },\n  ],\n  done: [\n    {\n      id: 1212,\n      title: \"Money Heist\",\n    },\n    {\n      id: 1344,\n      title: \"Reprogram the administrator for world domination: (hahaha)\",\n    },\n  ],\n};\n\nexport default data;\n","import React, {useState} from 'react'\n\nconst Index = (props) => {\n  const [title, setTask] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTask(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let data = {id: (Math.random() * 1000), title: title}\n    props.handleTaskSubmit(props.column, data);\n    setTask(\"\");\n  }\n  return (\n    <div ref={props.refd} className={props.isDraggingOver ? \"bg-info mt-3 px-3\" : \"mt-3 px-3\"}>\n\n      <form onSubmit={handleSubmit} className=\"mb-3\">\n        <div className=\"form-group\">\n          <input type=\"text\" onChange={handleChange} value={title} className=\"form-control bg-light border-primary\" placeholder=\"Add a new task\"/>\n        </div>\n      </form>\n      {props.children}\n    </div>\n   );\n}\n\nexport default Index;","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst Index = (props) => {\n  return (\n    <Draggable draggableId={props.task.id.toString()} index={props.index}>\n      {(provided) => (\n        <div\n          className=\"card shadow-sm mb-3 p-2\"\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          {props.task.title}\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nimport TaskList from \"./TaskList\";\nimport Task from \"./Task\";\n\nconst Index = (props) => {\n  return (\n    <div className=\"col-lg-2 mx-3 border-primary\">\n      <div className=\"card bg-light\">\n        <div className=\"card-header bg-primary text-white\">\n        {props.column.toUpperCase()}\n        </div>\n\n        <Droppable droppableId={props.column}>\n          {(provided, snapshot) => (\n            <TaskList\n              refd={provided.innerRef}\n              isDraggingOver={snapshot.isDraggingOver}\n              {...provided.droppableProps}\n              column={props.column}\n              handleTaskSubmit={props.handleTaskSubmit}\n            >\n              {props.tasks.map((task, index) => (\n                <Task key={task.id} index={index} task={task} />\n              ))}\n              {provided.placeholder}\n            </TaskList>\n          )}\n        </Droppable>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { useState, useEffect } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport database from \"./data\";\nimport Column from \"./column\";\n\nconst Index = () => {\n  const [data, setData] = useState({});\n  const [newColumn, setNewColumn] = useState(\"\");\n\n  useEffect(() => {\n    setData(database);\n  }, []);\n\n  const onDragEnd = (result) => {\n    const { destination, source, droppableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId) {\n      const newData = Array.from(data[source.droppableId]);\n      const task = newData[source.index];\n      newData.splice(source.index, 1);\n      newData.splice(destination.index, 0, task);\n      setData({\n        ...data,\n        [source.droppableId]: newData,\n      });\n      return;\n    }\n\n    const column = Array.from(data[source.droppableId]);\n    const remTask = column[source.index];\n    column.splice(source.index, 1);\n\n    const destinationData = Array.from(data[destination.droppableId]);\n    destinationData.splice(destination.index, 0, remTask);\n\n    setData({\n      ...data,\n      [source.droppableId]: column,\n      [destination.droppableId]: destinationData,\n    });\n  };\n\n  const handleChange = (e) => {\n    setNewColumn(e.target.value);\n  };\n\n\n  const handleTaskSubmit = (columnId, task) => {\n\n    let copyData = data[columnId];\n    let newData = [...copyData, task];\n\n    setData({...data, [columnId]: newData});\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (newColumn.length > 0) {\n      setData({ ...data, [newColumn]: [] });\n      setNewColumn(\"\");\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"d-flex overflow-auto px-5 mt-5 mb-5 pb-5\">\n        {/* <div className=\"\"> */}\n        {Object.keys(data).map((column, index) => {\n          return (\n            <Column\n              key={index}\n              column={column}\n              tasks={data[column]}\n              handleTaskSubmit={handleTaskSubmit}\n            />\n          );\n        })}\n        <div className=\"col-lg-2\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                value={newColumn}\n                onChange={handleChange}\n                className=\"form-control bg-light border-primary\"\n                placeholder=\"Add a new column\"\n              />\n            </div>\n          </form>\n          {/* </div> */}\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Index;\n","import { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row mb-5\">\n        <p className=\"display-5\">Kanban Board</p>\n      </div>\n\n      <div className=\"row\">\n        <span className=\"text-muted mb-3\">Your boards</span>\n        <Link\n          to=\"/board/123456789\"\n          style={{ textDecoration: \"none\", color: \"#000\" }}\n        >\n          <div className=\"col-lg-2\">\n            <div className=\"card border-0 shadow\">\n              <div className=\"card-body\">Main Board</div>\n            </div>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import React from 'react'\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Board from \"./components/Board\";\nimport Home from \"./components/Board/home\";\n\nconst Index = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/board/:id\" exact component={Board} />\n    </Switch>\n   );\n}\n\nexport default Index;","import { BrowserRouter } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Routes from \"./AppRouter\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar />\n        {/* <Board /> */}\n        <Routes />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}